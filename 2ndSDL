#include <SDL.h>
#include <iostream>
#include <string>

using namespace std;

class Game
{
public:
	Game();
	void Init(const char* title, int x, int y, int width, int hight, int flag);
	void render();
	void clear();
	void Image();
	SDL_Surface* m_pImage;
	SDL_Surface* gScreenSurface;
private:
	SDL_Window* m_pWindow;
	SDL_Renderer* m_pRender;

};


void Game::Init(const char* title = "behiri", int x = 100, int y = 100, int width = 640, int hight = 480, int flag = 0)
{
	if (SDL_Init(SDL_INIT_EVERYTHING) >= 0)
	{
		m_pWindow = SDL_CreateWindow(title, x, y, width, hight, flag);
		cout << "window Created" << endl;
		if (m_pWindow != 0)
		{
			m_pRender = SDL_CreateRenderer(m_pWindow, -1, 0);
		}
	}
	else
	{
		cout << "error: failed to  Initializing SDL" << endl;
	}
}

void Game::render()
{
	if (m_pWindow != 0)
	{
		SDL_SetRenderDrawColor(m_pRender,87,213,11,1);
		SDL_RenderClear(m_pRender);
		cout << "render Created" << endl;
		SDL_RenderPresent(m_pRender);
		SDL_Delay(5000);
	}
	else
	{
		cout << "error: failed to create renderer" << endl;
	}
}

Game::Game()
{
	m_pWindow = 0;
	m_pRender = 0;
	m_pImage = 0;
};

void Game::clear()
{
	SDL_Quit();
}

void Game::Image()
{
	gScreenSurface = SDL_GetWindowSurface( m_pWindow );
	m_pImage = SDL_LoadBMP( "02_getting_an_image_on_the_screen/hello_world.bmp" );
	SDL_BlitSurface( m_pImage, NULL, gScreenSurface, NULL );
	SDL_UpdateWindowSurface( m_pWindow );
	SDL_Delay(2000);
}

int main(int argc, char* args[])
{
	Game myGame;
	myGame.Init("behix");
	myGame.render();
	myGame.Image();
	myGame.clear();
	return 1;
}
