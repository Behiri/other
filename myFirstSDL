#include <SDL.h>
#include <iostream>
using namespace std;

class Game
{
public:
	Game();
	void Init(const char* title, int x, int y, int width, int hight, int flag);
	void render();
	void clear();
	
private:
	SDL_Window* g_pWindow;
	SDL_Renderer* g_pRender;
};


void Game::Init(const char* title = "behiri", int x = 100, int y = 100, int width = 640, int hight = 480, int flag = 0)
{
	if (SDL_Init(SDL_INIT_EVERYTHING) >= 0)
	{
		g_pWindow = SDL_CreateWindow(title, x, y, width, hight, flag);
		cout << "window Created" << endl;
		if (g_pWindow != 0)
		{
			g_pRender = SDL_CreateRenderer(g_pWindow, -1, 0);
		}
	}
	else
	{
		cout << "error: failed to  Initializing SDL" << endl;
	}
}

void Game::render()
{
	if (g_pWindow != 0)
	{
		SDL_SetRenderDrawColor(g_pRender,87,213,11,1);
		SDL_RenderClear(g_pRender);
		cout << "render Created" << endl;
		SDL_RenderPresent(g_pRender);
		SDL_Delay(5000);
	}
	else
	{
		cout << "error: failed to create renderer" << endl;
	}
}

Game::Game()
{
	g_pWindow = 0;
	g_pRender = 0;
};

void Game::clear()
{
	SDL_Quit();
}

int main(int argc, char* args[])
{
	Game myGame;
	myGame.Init("behix");
	myGame.render();
	myGame.clear();
	return 1;
}
